PROCEDURE dot_product(v1 : ARRAY_OF_INTEGER, v2 : ARRAY_OF_INTEGER)
VAR
    i: INTEGER;
BEGIN
    FOR i FROM O TO v1.length-1 STEP 1 DO
        ps += v1[i]*v2[i]
    END_FOR
END

ALGORITHM are_orthogonal
VAR
    ps : INTEGER :=0;       // This global value will always contain the dot product of two given vectors
    /* We will put the vectors inside an array
    Each element of this array contains 2 vectors (pair) */
    tab : ARRAY_OF_ARRAY[50];              
    n: INTEGER;
    v: ARRAY_OF_INTEGER[3];
BEGIN
    Read(n); // // We ask the use to give the number of pair of vectors
    FOR i FROM 0 TO n-1 STEP 1 DO
        FOR j FROM 0 TO 1 STEP 1 DO
            Read(v);                       // We ask the use to give 2 vectors 
            tab[i][j] := v;                // We put each vector in the array
        END_FOR
        dot_product(tab[i][0], tab[i][1]); // Dot product of two given vectors
        IF (ps == 0) THEN
            Write("Vectors are orthogonal");
        ELSE
            Write("Vectors are not orthogonal");
        END_IF
    END_FOR
END